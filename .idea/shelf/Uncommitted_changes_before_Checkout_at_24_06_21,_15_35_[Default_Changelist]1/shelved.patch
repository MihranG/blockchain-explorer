Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"bch-proj\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.11.4\",\n    \"@testing-library/react\": \"^11.1.0\",\n    \"@testing-library/user-event\": \"^12.1.10\",\n    \"@types/jest\": \"^26.0.15\",\n    \"@types/node\": \"^12.0.0\",\n    \"@types/react\": \"^17.0.0\",\n    \"@types/react-dom\": \"^17.0.0\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-scripts\": \"4.0.3\",\n    \"typescript\": \"^4.1.2\",\n    \"web-vitals\": \"^1.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	
+++ b/package.json	
@@ -10,8 +10,15 @@
     "@types/node": "^12.0.0",
     "@types/react": "^17.0.0",
     "@types/react-dom": "^17.0.0",
+    "@types/react-router-dom": "^5.1.7",
+    "bootstrap": "4.6.0",
+    "express": "^4.17.1",
+    "node-fetch": "^2.6.1",
+    "node-sass": "5",
     "react": "^17.0.2",
+    "react-bootstrap": "^1.6.1",
     "react-dom": "^17.0.2",
+    "react-router-dom": "^5.2.0",
     "react-scripts": "4.0.3",
     "typescript": "^4.1.2",
     "web-vitals": "^1.0.1"
@@ -20,7 +27,9 @@
     "start": "react-scripts start",
     "build": "react-scripts build",
     "test": "react-scripts test",
-    "eject": "react-scripts eject"
+    "eject": "react-scripts eject",
+    "server": "nodemon src/server/index.js",
+    "dev": "concurrently \"npm run server\" \"npm run start\""
   },
   "eslintConfig": {
     "extends": [
@@ -39,5 +48,11 @@
       "last 1 firefox version",
       "last 1 safari version"
     ]
-  }
+  },
+  "devDependencies": {
+    "@types/react-bootstrap": "^0.32.25",
+    "concurrently": "^6.2.0",
+    "nodemon": "^2.0.7"
+  },
+  "proxy": "http://localhost:8080"
 }
Index: src/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.tsx b/src/App.tsx
--- a/src/App.tsx	
+++ b/src/App.tsx	
@@ -1,25 +1,42 @@
-import React from 'react';
+import React , {useEffect} from 'react';
 import logo from './logo.svg';
-import './App.css';
+import './App.scss';
+import Button from 'react-bootstrap/Button';
+import {
+    BrowserRouter as Router,
+    Route,
+    Switch
+} from 'react-router-dom';
+
 
 function App() {
+  useEffect(()=>{
+    fetch('/api/block/234234')
+        .then(res => res.json())
+        .then(res => {
+          console.log('response', res.data )});
+  },[])
   return (
-    <div className="App">
-      <header className="App-header">
-        <img src={logo} className="App-logo" alt="logo" />
-        <p>
-          Edit <code>src/App.tsx</code> and save to reload.
-        </p>
-        <a
-          className="App-link"
-          href="https://reactjs.org"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          Learn React
-        </a>
-      </header>
-    </div>
+      <Router>
+          <Switch>
+              <Route path='/:id' render={({ location, match}) =>
+                  <div>{match.params.id}</div>
+              }>
+              </Route>
+              <Route path='/'>
+                  <div className="App">
+                      <header className="App-header">
+
+                          <Button variant="outline-secondary" >
+                              test
+                          </Button>
+                      </header>
+                  </div>
+              </Route>
+          </Switch>
+
+      </Router>
+
   );
 }
 
Index: src/App.css
===================================================================
diff --git a/src/App.css b/src/App.css
deleted file mode 100644
--- a/src/App.css	
+++ /dev/null	
@@ -1,38 +0,0 @@
-.App {
-  text-align: center;
-}
-
-.App-logo {
-  height: 40vmin;
-  pointer-events: none;
-}
-
-@media (prefers-reduced-motion: no-preference) {
-  .App-logo {
-    animation: App-logo-spin infinite 20s linear;
-  }
-}
-
-.App-header {
-  background-color: #282c34;
-  min-height: 100vh;
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-  justify-content: center;
-  font-size: calc(10px + 2vmin);
-  color: white;
-}
-
-.App-link {
-  color: #61dafb;
-}
-
-@keyframes App-logo-spin {
-  from {
-    transform: rotate(0deg);
-  }
-  to {
-    transform: rotate(360deg);
-  }
-}
Index: src/App.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.scss b/src/App.scss
new file mode 100644
--- /dev/null	
+++ b/src/App.scss	
@@ -0,0 +1,19 @@
+@import "~bootstrap/scss/bootstrap";
+
+
+.App {
+  text-align: center;
+}
+
+.App-header {
+  background-color: #282c34;
+  min-height: 100vh;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  justify-content: center;
+  font-size: calc(10px + 2vmin);
+  color: red;
+}
+
+
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.idea/.gitignore	
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: src/utils/helpers.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utils/helpers.ts b/src/utils/helpers.ts
new file mode 100644
--- /dev/null	
+++ b/src/utils/helpers.ts	
@@ -0,0 +1,3 @@
+export const hexFromDecimalString = (digitString: string): string => {
+    return `0x${parseInt(digitString).toString(16)}`;
+}
Index: src/server/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/server/index.js b/src/server/index.js
new file mode 100644
--- /dev/null	
+++ b/src/server/index.js	
@@ -0,0 +1,36 @@
+const express = require('express');
+const fetch = require('node-fetch');
+const {decimalToHexStringDigit} = require('./utils')
+
+// const os = require('os');
+
+const app = express();
+
+const API_URL = 'https://cloudflare-eth.com'
+
+app.use(express.static('dist'));
+app.get('/api/getUsername', (req, res) => res.send({ username: "os.userInfo().username" }));
+app.get('/api/block/:id', (req, res) => {
+    const id = req.params.id;
+    console.log('id', id, parseInt(id),parseInt(id).toString(16) )
+    const idPrepared = id === 'latest' ? id : decimalToHexStringDigit(id);
+    const options = {"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":[idPrepared, true],"id":1}
+        fetch(API_URL, {
+            method: 'POST',
+            headers: { 'Content-Type': 'application/json'},
+            body: JSON.stringify(options)
+        }).then((r)=>{
+            if(r.status === 200){
+                return r.json()
+            }else {
+                res.send({ error: true, errorMessage: 'UNKNOWN_ERROR' })
+            }
+        }).then(jsonRes=>{
+            res.send({data: jsonRes})
+        }).catch(e=>{
+            res.send({ error: true, errorMessage: e })
+        })
+
+});
+
+app.listen(process.env.PORT || 8080, () => console.log(`Listening on port ${process.env.PORT || 8080}!`));
Index: src/server/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/server/utils.js b/src/server/utils.js
new file mode 100644
--- /dev/null	
+++ b/src/server/utils.js	
@@ -0,0 +1,5 @@
+const decimalToHexStringDigit = (decimalNumber) =>{
+    return `0x${parseInt(decimalNumber).toString(16)}`;
+}
+
+module.exports.decimalToHexStringDigit = decimalToHexStringDigit
Index: nodemon.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/nodemon.json b/nodemon.json
new file mode 100644
--- /dev/null	
+++ b/nodemon.json	
@@ -0,0 +1,3 @@
+{
+  "watch": ["src/server/"]
+}
